#! /bin/bash

# NOTE: At the moment, this has only been confirmed to work with PHP 7


# Grab full name of workspace container
PHP_WORKSPACE_CONTAINER=$(docker ps | grep workspace | awk '{print $1}')


# Grab OS type
if [[ "$(uname)" == "Darwin" ]]; then
    OS_TYPE="OSX"
else
    OS_TYPE=$(expr substr $(uname -s) 1 5)
fi


opcache_status ()
{
    echo 'opcache status'

    # If running on Windows, need to prepend with winpty :(
    if [[ $OS_TYPE == "MINGW" ]]; then
        winpty docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'

    else
        docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'
    fi

}


opcache_start ()
{
    echo 'Start opcache'

    # And uncomment line with opcache extension, thus enabling it
    ON_CMD="sed -i 's/^;zend_extension=/zend_extension=/g' \
                    /etc/php/7.1/cli/conf.d/10-opcache.ini"


    # If running on Windows, need to prepend with winpty :(
    if [[ $OS_TYPE == "MINGW" ]]; then
        winpty docker exec -it $PHP_WORKSPACE_CONTAINER bash -c "${ON_CMD}"
        docker restart $PHP_WORKSPACE_CONTAINER
        winpty docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'

    else
        docker exec -it $PHP_WORKSPACE_CONTAINER bash -c "${ON_CMD}"
        docker restart $PHP_WORKSPACE_CONTAINER
        docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'
    fi
}


opcache_stop ()
{
    echo 'Stop opcache'

    # Comment out opcache extension line
    OFF_CMD="sed -i 's/^zend_extension=/;zend_extension=/g' /etc/php/7.1/cli/conf.d/10-opcache.ini"


    # If running on Windows, need to prepend with winpty :(
    if [[ $OS_TYPE == "MINGW" ]]; then
        # This is the equivalent of:
        # winpty docker exec -it laradock_workspace_1 bash -c 'bla bla bla'
        # Thanks to @michaelarnauts at https://github.com/docker/compose/issues/593
        winpty docker exec -it $PHP_WORKSPACE_CONTAINER bash -c "${OFF_CMD}"
        docker restart $PHP_WORKSPACE_CONTAINER
        #docker-compose restart workspace
        winpty docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'

    else
        docker exec -it $PHP_WORKSPACE_CONTAINER bash -c "${OFF_CMD}"
        # docker-compose restart workspace
        docker restart $PHP_WORKSPACE_CONTAINER
        docker exec -it $PHP_WORKSPACE_CONTAINER bash -c 'php -v'
    fi
}


case $@ in
    stop|STOP)
        opcache_stop
        ;;
    start|START)
        opcache_start
        ;;
    status|STATUS)
        opcache_status
        ;;
    *)
        echo "opcache [Stop | Start | Status] in the ${PHP_WORKSPACE_CONTAINER} container."
        echo "opcache must have already been installed."
        echo "Usage:"
        echo "  .workspace/opcache stop|start|status"

esac

exit 1
